---
import BlogList from "@components/BlogList.astro";
import { sendConfirmationEmail } from "@lib/courier";
import { createSubscriber, getSubscriber } from "@lib/subscriber";
import { LibsqlError } from "@libsql/client";

const methods = ["POST"];

if (!methods.includes(Astro.request.method)) {
  return new Response(null, {
    status: 405,
    statusText: "Method Not Allowed",
    headers: {
      Allow: methods.join(", "),
    },
  });
}

const data = await Astro.request.formData();
const email = data.get("email");
const givenName = data.get("given_name");

if (!email || typeof email !== "string") {
  return new Response(null, {
    status: 400,
    statusText: "Bad Request",
    message: "Missing email or given_name",
  });
}

if (!givenName || typeof givenName !== "string") {
  return new Response(null, {
    status: 400,
    statusText: "Bad Request",
    message: "Missing email or given_name",
  });
}

try {
  const subscriber = await createSubscriber(
    email.toString(),
    givenName.toString()
  );

  await sendConfirmationEmail(subscriber);
} catch (error) {
  console.error(error);
  if (error instanceof LibsqlError) {
    if (error.message.includes("UNIQUE constraint failed: subscribers.email")) {
      // NOTE: consider fetch(`${Astro.url.origin}/error.html`) so you canuse an actual html file
      const html = `<div class="alert alert-warning">
        <h4 class="alert-heading">You're already subscribed!</h4>
        <p>We already have your email address on file. If you're not receiving emails, please check your spam folder.</p>
      </div>`;

      return new Response(html, {
        status: 409,
        statusText: "Conflict",
        message: "Email already registered",
      });
    }
  } else {
    // NOTE: consider fetch(`${Astro.url.origin}/error.html`) so you canuse an actual html file
    const html = `<div class="alert alert-warning">
      <h4 class="alert-heading">Something went wrong!</h4>
      <p>We're not sure what happened, but we couldn't subscribe you. Please try again later.</p>
    </div>`;

    return new Response(html, {
      status: 500,
      statusText: "Internal Server Error",
    });
  }
}
---

<div class="py-24 sm:py-32 lg:pb-40">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-2xl text-center">
      <h3 class="text-4xl font-bold tracking-tight text-white sm:text-6xl">
        Thank you for signing up to the Cloud Spark newsletter!
      </h3>
      <p class="mt-6 text-lg leading-8">
        Please check your email and confirm your subscription! Be sure to check
        out our existing newsletters and blogs:
      </p>
      <BlogList />
    </div>
  </div>
</div>

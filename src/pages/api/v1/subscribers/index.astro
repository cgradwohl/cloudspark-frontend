---
import { sendConfirmationEmail } from "@lib/courier";
import { createSubscriber } from "@lib/subscriber";
import { LibsqlError } from "@libsql/client";

const methods = ["POST"];

if (!methods.includes(Astro.request.method)) {
  return new Response(null, {
    status: 405,
    statusText: "Method Not Allowed",
    headers: {
      Allow: methods.join(", "),
    },
  });
}

const data = await Astro.request.formData();
const email = data.get("email");
const givenName = data.get("given_name");

if (!email || typeof email !== "string") {
  return new Response(null, {
    status: 400,
    statusText: "Bad Request",
    message: "Missing email or given_name",
  });
}

if (!givenName || typeof givenName !== "string") {
  return new Response(null, {
    status: 400,
    statusText: "Bad Request",
    message: "Missing email or given_name",
  });
}

try {
  const subscriber = await createSubscriber(
    email.toString(),
    givenName.toString()
  );

  await sendConfirmationEmail(subscriber);
} catch (error) {
  console.error(error);

  if (error instanceof LibsqlError) {
    if (error.message.includes("UNIQUE constraint failed: subscribers.email")) {
      Astro.response.status = 409;
      Astro.response.statusText = "Conflict";
    } else {
      Astro.response.status = 400;
      Astro.response.statusText = "Bad Request";
    }
  } else {
    Astro.response.status = 500;
    Astro.response.statusText = "Internal Server Error";
  }
}
---

{
  Astro.response.status === 409 && (
    <div class="alert alert-warning">
      <h4 class="alert-heading">You're already subscribed!</h4>
      <p>
        We already have your email address on file. If you're not receiving
        emails, please check your spam folder.
      </p>
    </div>
  )
}

{
  Astro.response.status === 500 && (
    <div class="alert alert-warning">
      <h4 class="alert-heading">Something went wrong!</h4>
      <p>
        We're not sure what happened, but we couldn't subscribe you. Please try
        again later.
      </p>
    </div>
  )
}

{
  Astro.response.status === 200 && (
    <div class="py-24 sm:py-32 lg:pb-40">
      <div class="mx-auto max-w-7xl px-6 lg:px-8">
        <div class="mx-auto max-w-2xl text-center">
          <div class="grid place-items-center h-screen content-center">
            <h1>Welcome to Cloudspark!</h1>

            <h3 class="mt-6 text-lg leading-8">
              Please check your email and confirm your subscription!
            </h3>
          </div>
        </div>
      </div>
    </div>
  )
}

<!-- TODO: Collect some data from the user. -->
<!-- <h3 class="mt-6 text-lg leading-8">
              While you're here, please let us know how we can help:
            </h3>

            <form>
              <p>What is the best programming language?</p>
              <input type="text" name="q1" />
              <p>What is the best programming language?</p>
              <input type="text" name="q2" />
              <p>What is the best programming language?</p>
              <input type="text" name="q3" />
              <input type="submit" />
            </form> -->

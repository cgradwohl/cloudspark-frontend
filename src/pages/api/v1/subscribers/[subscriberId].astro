---
import BlogList from "@components/BlogList.astro";
import Layout from "@layouts/Layout.astro";
import {
  createProfile,
  deleteProfile,
  sendWelcomeEmail,
  sendUnsubscribeEmail,
} from "@lib/courier";
import {
  deleteSubscriber,
  getSubscriber,
  updateSubscriberStatus,
} from "@lib/subscriber";

const methods = ["GET", "PUT", "DELETE"];

if (!methods.includes(Astro.request.method)) {
  return new Response(null, {
    status: 405,
    statusText: "Method Not Allowed",
    headers: {
      Allow: methods.join(", "),
    },
  });
}

const subscriberId = Astro.params.subscriberId;

if (!subscriberId || typeof subscriberId !== "string") {
  return Astro.redirect("/400");
}

if (Astro.request.method === "GET") {
  const subscriber = await getSubscriber(subscriberId);
  if (!subscriber) {
    return Astro.redirect("/404");
  }

  Astro.response.status = 200;
}

if (Astro.request.method === "PUT") {
  // TODO: remoce this since update subscriber already checks for subscriber
  const subscriber = await getSubscriber(subscriberId);

  if (!subscriber) {
    return Astro.redirect("/404");
  }

  // TODO: add token expiration for 24 hours
  if (subscriber.status === "subscribed") {
    return Astro.redirect("/blogs");
  }

  try {
    // add better error handling, make eact method throw an error type (CourierError, SubscriberDBError)
    await updateSubscriberStatus(subscriberId, "subscribed");
    await createProfile(subscriber);
    await sendWelcomeEmail(subscriber);

    Astro.response.status = 200;
  } catch (error) {
    console.error(error);
    Astro.response.status = 500;
  }
}

if (Astro.request.method === "DELETE") {
  try {
    const subscriber = await deleteSubscriber(subscriberId);
    if (!subscriber) {
      Astro.response.status = 404;
      return Astro.redirect("/404");
    }

    await deleteProfile(subscriber);

    await sendUnsubscribeEmail(subscriber);
  } catch (error) {
    console.error(error);
    Astro.response.status = 500;
  }
}
---

{
  Astro.request.method === "GET" && Astro.response.status === 200 && (
    <Layout title="Unsubscribe">
      <div class="grid place-items-center h-screen content-center">
        <div id="content">
          <h3 class="text-4xl font-bold tracking-tight py-12">
            We will miss you.
          </h3>
          <h3
            class="text-2xl
        font-bold
        tracking-tight py-8"
          >
            Are you sure you would like to unsubscribe?
          </h3>

          <button
            hx-trigger="click"
            hx-delete={`/api/v1/subscribers/${subscriberId}`}
            hx-target="#content"
            class="rounded-md bg-sky-500 p-2 text-sm font-semibold text-white"
          >
            <span>Unsubscribe</span>
          </button>
        </div>
      </div>
    </Layout>
  )
}

{
  Astro.request.method === "PUT" && Astro.response.status === 200 && (
    <Layout title="Cloud Spark - Thank you">
      <div class="grid place-items-center h-screen content-center">
        <h3 class="text-4xl font-bold tracking-tight text-white">
          Thank you for signing up to the Cloud Spark newsletter!
        </h3>
        <p class="mt-6 text-lg leading-8">
          Be sure to check out our existing newsletters and blogs:
        </p>
        <BlogList />
      </div>
    </Layout>
  )
}

{
  Astro.request.method === "DELETE" && Astro.response.status === 200 && (
    <Layout title="Cloud Spark - Goodbye">
      <div class="grid place-items-center h-screen content-center">
        <h1 class="text-3xl">Goodbye!</h1>

        <p>We're sad to see you go.</p>
      </div>
    </Layout>
  )
}

{
  Astro.response.status === 500 && (
    <Layout title="Cloud Spark - Error">
      <div class="grid place-items-center h-screen content-center">
        <div>
          <h2>Someting went wrong!</h2>
          <p>
            We're not sure what happened, but we couldn't confirm your email.
            Please try again later.
          </p>
        </div>
      </div>
    </Layout>
  )
}
